AWSTemplateFormatVersion: 2010-09-09
Description: Field Day demo application CloudFormation template

Parameters:
  VPC:
    Description: Id of existing VPC
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: Must be a valid VPC Id
  Subnet:
    Description: Id of existing public Subnet
    Type: AWS::EC2::Subnet::Id
    ConstraintDescription: Must be a valid Subnet Id
  AMI:
    Description: AMI to launch instance with
    Type: AWS::EC2::Image::Id
    ConstraintDescription: Must be a valid AMI

Resources:
  FieldDayInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          deployApp:
            - registerNode
            - installNodeAndGit
            - cloneRepository
            - installDependencies
            - runApp
        registerNode:
          commands:
            register:
              command: 'curl -sL https://rpm.nodesource.com/setup_14.x | sudo -E bash -'
        installNodeAndGit:
          packages:
            yum:
              git: []
              nodejs: []
        cloneRepository:
          commands:
            clone:
              command: 'git clone https://github.com/ryanmurakami/fieldday.git'
              cwd: '/home/ec2-user'
        installDependencies:
          commands:
            install:
              command: 'npm ci'
              cwd: '/home/ec2-user/fieldday'
        runApp:
          commands:
            run:
              command: 'npm start'
              cwd: '/home/ec2-user/fieldday'
    Properties:
      ImageId: !Ref AMI
      InstanceType:  t2.micro
      KeyName: fieldday
      SecurityGroupIds:
        - !GetAtt FieldDaySecurityGroup.GroupId
      SubnetId: !Ref Subnet
      Tags:
        - Key: Name
          Value: fieldday-cf-deployed
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource FieldDayInstance '
            - '         --configsets deployApp '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

  FieldDaySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 3000
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 3000
          IpProtocol: tcp
          ToPort: 3000
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId: !Ref VPC

  FieldDayElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref FieldDayInstance
